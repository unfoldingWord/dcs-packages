/* tslint:disable */
/* eslint-disable */
/**
 * DCS (Gitea) API.
 * This documentation describes the DCS (Gitea) API.
 *
 * OpenAPI spec version: 1.16.7+dcs
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { ExternalTracker } from './external-tracker';
import { ExternalWiki } from './external-wiki';
import { InternalTracker } from './internal-tracker';
/**
 * EditRepoOption options when editing a repository's properties
 * @export
 * @interface EditRepoOption
 */
export interface EditRepoOption {
    /**
     * either `true` to allow mark pr as merged manually, or `false` to prevent it. `has_pull_requests` must be `true`.
     * @type {boolean}
     * @memberof EditRepoOption
     */
    allowManualMerge?: boolean;
    /**
     * either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits. `has_pull_requests` must be `true`.
     * @type {boolean}
     * @memberof EditRepoOption
     */
    allowMergeCommits?: boolean;
    /**
     * either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging. `has_pull_requests` must be `true`.
     * @type {boolean}
     * @memberof EditRepoOption
     */
    allowRebase?: boolean;
    /**
     * either `true` to allow rebase with explicit merge commits (--no-ff), or `false` to prevent rebase with explicit merge commits. `has_pull_requests` must be `true`.
     * @type {boolean}
     * @memberof EditRepoOption
     */
    allowRebaseExplicit?: boolean;
    /**
     * either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging. `has_pull_requests` must be `true`.
     * @type {boolean}
     * @memberof EditRepoOption
     */
    allowSquashMerge?: boolean;
    /**
     * set to `true` to archive this repository.
     * @type {boolean}
     * @memberof EditRepoOption
     */
    archived?: boolean;
    /**
     * either `true` to enable AutodetectManualMerge, or `false` to prevent it. `has_pull_requests` must be `true`, Note: In some special cases, misjudgments can occur.
     * @type {boolean}
     * @memberof EditRepoOption
     */
    autodetectManualMerge?: boolean;
    /**
     * sets the default branch for this repository.
     * @type {string}
     * @memberof EditRepoOption
     */
    defaultBranch?: string;
    /**
     * set to `true` to delete pr branch after merge by default
     * @type {boolean}
     * @memberof EditRepoOption
     */
    defaultDeleteBranchAfterMerge?: boolean;
    /**
     * set to a merge style to be used by this repository: \"merge\", \"rebase\", \"rebase-merge\", or \"squash\". `has_pull_requests` must be `true`.
     * @type {string}
     * @memberof EditRepoOption
     */
    defaultMergeStyle?: string;
    /**
     * a short description of the repository.
     * @type {string}
     * @memberof EditRepoOption
     */
    description?: string;
    /**
     * enable prune - remove obsolete remote-tracking references
     * @type {boolean}
     * @memberof EditRepoOption
     */
    enablePrune?: boolean;
    /**
     * 
     * @type {ExternalTracker}
     * @memberof EditRepoOption
     */
    externalTracker?: ExternalTracker;
    /**
     * 
     * @type {ExternalWiki}
     * @memberof EditRepoOption
     */
    externalWiki?: ExternalWiki;
    /**
     * either `true` to enable issues for this repository or `false` to disable them.
     * @type {boolean}
     * @memberof EditRepoOption
     */
    hasIssues?: boolean;
    /**
     * either `true` to enable project unit, or `false` to disable them.
     * @type {boolean}
     * @memberof EditRepoOption
     */
    hasProjects?: boolean;
    /**
     * either `true` to allow pull requests, or `false` to prevent pull request.
     * @type {boolean}
     * @memberof EditRepoOption
     */
    hasPullRequests?: boolean;
    /**
     * either `true` to enable the wiki for this repository or `false` to disable it.
     * @type {boolean}
     * @memberof EditRepoOption
     */
    hasWiki?: boolean;
    /**
     * either `true` to ignore whitespace for conflicts, or `false` to not ignore whitespace. `has_pull_requests` must be `true`.
     * @type {boolean}
     * @memberof EditRepoOption
     */
    ignoreWhitespaceConflicts?: boolean;
    /**
     * 
     * @type {InternalTracker}
     * @memberof EditRepoOption
     */
    internalTracker?: InternalTracker;
    /**
     * set to a string like `8h30m0s` to set the mirror interval time
     * @type {string}
     * @memberof EditRepoOption
     */
    mirrorInterval?: string;
    /**
     * name of the repository
     * @type {string}
     * @memberof EditRepoOption
     */
    name?: string;
    /**
     * either `true` to make the repository private or `false` to make it public. Note: you will get a 422 error if the organization restricts changing repository visibility to organization owners and a non-owner tries to change the value of private.
     * @type {boolean}
     * @memberof EditRepoOption
     */
    _private?: boolean;
    /**
     * either `true` to make this repository a template or `false` to make it a normal repository
     * @type {boolean}
     * @memberof EditRepoOption
     */
    template?: boolean;
    /**
     * a URL with more information about the repository.
     * @type {string}
     * @memberof EditRepoOption
     */
    website?: string;
}
